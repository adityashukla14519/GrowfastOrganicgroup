
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/GeneralMaster.cshtml";
}


<script>
    $(document).ready(function () {
    var msg = '@ViewBag.msg';

        if (msg) {
            var alertElement = '<div class="alert btncolorblue alert-dismissible fade show p-2" role="alert" id="alert">' +
                msg +
                '<button type="button" class="btn-close mt-1 pe-2" data-bs-dismiss="alert" aria-label="Close"></button>' +
                '</div>';
            $(alertElement).insertBefore('#alert-container');
            setTimeout(function () {
                $('#alert').alert('close');
            }, 5000);
            //$('.alert').on('closed.bs.alert', function () {
            //    window.location.href = '/User/Department';
            //});
            //$('#btnclose').on('click', function () {
            //    window.location.href = '/User/Department';
            //});
        }
});
</script>
<script>
    function validatePasswordbox(textbox) {
        var pattern = /^[^\\']+$/g;
        if (!pattern.test(textbox.value)) {
            textbox.setCustomValidity("Please enter a valid string");
        } else {
            textbox.setCustomValidity("");
        }
    }
    function validateEmailHost(textbox) {
        var pattern = /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i;
        if (!pattern.test(textbox.value)) {
            textbox.setCustomValidity("Please enter a valid email host name");
        } else {
            textbox.setCustomValidity("");
        }
    }
</script>
<script>
    function mail() {
        var ml = document.getElementById("mailuid").value;
        var mll = ml.substr(ml.lastIndexOf(".") + 1);
        if (ml != null && ml != "") {
            if (ml.indexOf(".") != -1) {
                if (mll != null && mll != "") {
                    spmail.innerText = "";
                    return true;
                }
                else {
                    spmail.innerText = "Please enter a valid email address ex:- john@gmail.com";
                    spmail.style.color = "red";
                    return false;
                }

            }
            else {
                spmail.innerText = "Please enter a valid email address ex:- john@gmail.com";
                spmail.style.color = "red";
                return false;
            }
        }
        else {
            spmail.innerText = "Please enter your email";
            spmail.style.color = "red";
            return false;
        }
    }
</script>




@using Newtonsoft.Json;
@using System.Data;
@{ DbManager db = new DbManager();
    Activitylog activitylog = new Activitylog();
    Error_15_16 error_15_16 = new Error_15_16();}

<div class="container">
    <div class="row mt-1 mb-3 nevigationstrip">
        <div class="col">
            <label class="text-uppercase text-truncate trutext">Home <i class="fa fa-angle-double-right"></i>  Registration</label>
        </div>
        <div class="col text-right d-flex justify-content-end">
            <label class="text-uppercase text-truncate trutext" style="cursor:pointer" onclick="navigateBack()"> <i class="fa fa-angle-double-left"></i> Back</label>
        </div>
    </div>
    <div class="row mt-2 mb-2 row-cols-1 row-cols-sm-3">
        <div class="col"></div>
        <div class="col">
            <div id="alert-container"></div>
        </div>
        <div class="col text-right d-flex justify-content-end">
            @*<button type="button" class="btn btncolor btn-sm" data-bs-toggle="modal" data-bs-target="#customer">
                    <i class="fa fa-plus" aria-hidden="true"></i> New
                </button>*@
        </div>
    </div>
    <div class="row row-cols-1">
        <form action="/Home/Register" method="post" class="needs-validation" novalidate onsubmit="return mail();">
            <h5 class="modal-title text-uppercase" id="staticBackdropLabel">Register Here...</h5>
            <div class="row row-cols-1 row-cols-sm-2">

                <div class="col mb-2">
                    <input type="hidden" id="hid" name="hid" />
                    <h6 class="mt-2">Name</h6>
                    <input type="text" class="form-control shadow-none" id="name" name="name" maxlength="25" required onkeyup="validateTextbox(this)" pattern="^[A-Za-z0-9 ]*$" title="Please enter only letters, and spaces" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">Mobile Number</h6>
                    <input type="text" class="form-control shadow-none" id="mobile" name="mobile" maxlength="10" required onkeyup="validateTextbox(this)" pattern="^[0-9]*$" title="Please enter only letters, and spaces" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">Email</h6>
                    <input type="email" class="form-control shadow-none" id="email" name="email" maxlength="30" required onkeyup="mail()" /><span id="spmail"></span>

                </div>

                <div class="col mb-2">
                    <h6 class="mt-2">Address</h6>
                    <input type="text" class="form-control shadow-none" id="address" name="address" maxlength="250" required onkeyup="validatePasswordbox(this)" />
                    <div class="invalid-feedback">
                        Please enter a valid string
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">State</h6>
                    <input type="text" class="form-control shadow-none" id="state" name="state" required onkeyup="validateTextbox(this)" pattern="^[A-Za-z0-9 ]*$" title="Please enter only letters, and spaces" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">City</h6>
                    <input type="text" class="form-control shadow-none" id="city" name="city" required onkeyup="validateTextbox(this)" pattern="^[A-Za-z0-9 ]*$" title="Please enter only letters, and spaces" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">Postal code</h6>
                    <input type="text" class="form-control shadow-none" id="postal_code" name="postal_code" maxlength="6" required onkeyup="validateTextbox(this)" pattern="^[0-9]*$" title="Please enter only letters, and spaces" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
                <div class="col mb-2">
                    <h6 class="mt-2">Profile pic</h6>
                    <input type="file" class="form-control shadow-none" id="profilepic" name="profilepic" />
                    <div class="invalid-feedback">
                        Please enter only letters, and spaces
                    </div>
                </div>
            </div>

            <div class="col-sm-12 text-center">
                <br /><br />
                <button type="submit" class="btn btncolor">Submit</button>
            </div>

        </form>
    </div>
</div>









<div id="table-container">
    <div class="card card-body mb-2 shadow border-end-0 border-bottom-0 border-top-0 border-3 bg-white rounded-0">
        <div class="row">
            <!-- Your existing data items go here -->
        </div>
    </div>
</div>
<div id="pagination-controls" class="text-center"></div>
<input id="search-input" type="text" placeholder="Search by Name" class="form-control my-3">

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.10/js/jquery.dataTables.min.js"></script>

    @{
        string query = "SELECT TOP 5 * FROM tbl_customer";
        DataTable dt = db.GetAllRecord(query);
        string jsonData = JsonConvert.SerializeObject(dt, Formatting.Indented);
        ViewBag.json = jsonData.Replace('"',' ');
    }
    


<script>
        // Sample data array (you can replace this with your C# data)
        const data = @ViewBag.json;
        const tableContainer = document.getElementById("table-container");
        const paginationControls = document.getElementById("pagination-controls");
        const searchInput = document.getElementById("search-input");

        const itemsPerPage = 5;
        let currentPage = 1;

        function populateTable() {
            tableContainer.innerHTML = "";
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            for (let i = startIndex; i < endIndex && i < data.length; i++) {
                const item = data[i];
                const card = document.createElement("div");
                card.classList.add("card", "card-body", "mb-2", "shadow", "border-end-0", "border-bottom-0", "border-top-0", "border-3", "bg-white", "rounded-0");

                card.innerHTML = `
                <div class="row">
                    <div class="col-9 col-sm-10">
                        <Label><b><span style="display:none">${i}</span> ${item.Name} , +91 ${item.Mobile}</b></Label><br />
                        ${item.Address} - ${item.Postal_code}
                    </div>
                    <div class="col-3 col-sm-2 text-end">
                        ${item.Status === "Active" ? '<i class="fa fa fa-square text-success"></i>' : '<i class="fa fa fa-square text-success"></i>'} <b>${item.Status}</b>
                        <br /><a href="/User/Order?customerid=${item.Customer_id}&leadid="><button class="btn btncolorblue" style="width:50px"><i class="fa fa-shopping-cart"></i></button></a>
                    </div>
                </div>
            `;

                tableContainer.appendChild(card);
            }
        }

        function createPaginationButtons() {
            const totalPages = Math.ceil(data.length / itemsPerPage);
            paginationControls.innerHTML = "";

            // Add "Previous" button
            const previousButton = document.createElement("button");
            previousButton.classList.add("pagination-button", "btn", "btn-secondary");
            previousButton.textContent = "Previous";
            previousButton.addEventListener("click", () => {
                if (currentPage > 1) {
                    currentPage--;
                    //alert(currentPage)
                    document.getElementById("pagenum").innerHTML = currentPage;
                    populateTable();
                }
            });
            paginationControls.appendChild(previousButton);

            const numberButton = document.createElement("button");
            numberButton.classList.add("pagination-button", "btn", "btn-secondary");
            numberButton.textContent = "1";
            numberButton.id = "pagenum"; // Add the ID here
            paginationControls.appendChild(numberButton);

            // Add "Next" button
            const nextButton = document.createElement("button");
            nextButton.classList.add("pagination-button", "btn", "btn-secondary");
            nextButton.textContent = "Next";
            nextButton.addEventListener("click", () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    //alert(currentPage)
                    document.getElementById("pagenum").innerHTML = currentPage;
                    populateTable();
                }
            });
            paginationControls.appendChild(nextButton);
        }

        function filterData(searchText) {
            const filteredData = data.filter(item => item.Name.toLowerCase().includes(searchText.toLowerCase()));
            return filteredData;
        }

        searchInput.addEventListener("input", () => {
            const searchText = searchInput.value;
            const filteredData = filterData(searchText);
            data.length = 0; // Clear the data array
            data.push(...filteredData); // Replace it with the filtered data
            currentPage = 1; // Reset to the first page
            createPaginationButtons(); // Recreate pagination
            populateTable();
        });

        // Initial setup
        createPaginationButtons();
        populateTable();



</script>


    <style>
        #pagination-controls {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px 0;
        }

        .pagination-button {
            padding: 5px 10px;
            margin: 0 5px;
            cursor: pointer;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
        }
    </style>
